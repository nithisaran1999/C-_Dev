<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIAAjEQAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAEOpJ
        REFUeNrt3XmMXeV5x/Hv894zm8fjrWwOhMRgVofQECghDcQpS0QEbUJEkjZqWlpAEV0SKSo2oamSKsIz
        WKGFRokq0jRE6ZJWqKJSIK1MKRSxlNZAhCBhq9lMgsziYcaz3fs+/eOMDZlY9r3DjN97zvv7SCODfK/8
        zFl+55z3vAuIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiISLex1AXIgRXCNQDmHpaaMQiE1DVV
        kAMz7r6z/POq1PXMmwIgIyEMA74S7BPAbwBrgN7UdVWQA68C9wPfdW89YBY8xuoFgQIgEyEM485BZowA
        nwb6UtdUE08BXzj//PFbbr11EPeNqevpSCN1AXIgDOOOhcDngM+jq/5CWgWse/LJ3tvNeNl9S+p6OqLn
        vwyYgZkfBnwSKFLXU0PrgI+YAWxKXUtHFAAZKAOAI4EjUtdSUwE40b1VhIqdURUrV+ZrtsVfV//FszQE
        K6xirWoKAJGFUbFTv6QAEMmYAkAkY3omlLmmKDu5xNSFdIkBYAUVvcXfHwWAzLUVuALYSU0P+g60gI8C
        I9S045QCQOaaAP4P2BljtXq1LbQQRgB+Bu6pa1m03zF1ASLdq7bn/R4KAJGMKQBEMqYAEMmYAkAkYwoA
        kYwpAEQypgAQyZgCQCRjCgCRjCkARDKmAJC56t//tW31HwulwUAy1yoz1oOPNRqb6n8G7FNsudtJ1PhC
        qQCQuU5y57tguhMo9VDjadQVADJXASxLXYQcGLW9tRGR/VMAiGRMAZAPRy38i8mr+NZAbQCZcLedQDN1
        HTW2M8bGTNUyVncA+XgWeCJ1ETU1A/wvxFaM1ZpMWQGQAfdIUQzsAP4W2JW6nhq6F7i1/M+rUtfSES0P
        noXbcf8QYD+hfFA9iXK++71yB3ef/TPvH9v3Yn8t4D7gT8AeK7ddtZYHr16rhcyb2TBm9LvzQTMuBNZQ
        znfvb3wGW/fOgeMOW9lzRLWeZhdes+UzP3pq4sFXXm+OzskBB14D7nP3mwcGjnhmcnI7MW5IXXLHFAAZ
        ajSGASvcfQBsz2NgjO5rVvc37rnhuGuX9IVLcw8Ad15+ZNvERWd+7sGtISx5892ym/mMWZgEvNm8MnWp
        86YAkD38rjtgSV9gdOKvwK9IXU8X2IHZh4Gt9qGzU9eyKPQaUN7QdBhr1nkhnM7VfFvoLYBIxhQAIhlT
        AIhkTAEgkjEFgEjGFAAiGVMAiGRsn/0AimIT0DL3osedBrg6Du2FmbXcG9Nm0Vut6nUHlXz9QgCYjeAe
        GmbNw2O0M6A4GTgcWAKmwUN74c4uaD3tzq2NxvD/uNOMcWPqskT2a08AhDBMjL3AzBEhtH4X7FPA0UB/
        6iIr5Pfd2Wzm3wxheEohIN0uAJhtJsbVhDD9ATP/O+DLwDp08nfqbcCX3e0isxZm16auR2SfQgibgQnM
        XlwP3AicheYJeCuWA5e7FyvNqjU7jOQnQAuz3uPM2Awcn7qgmjgReHvqIjrWF+DwATAtCpKLArwP7A+B
        U1MXUyMD4O83895GY7gyr1rDmfeytL8RHr5x3WFrVvdVbX5LmYcC7HTgotSF1MxSYMTdZlIX0gnDmJh2
        bt/6+uClF/ZDSwlQdwXwUWB16kJqxqjw8lozTZ34uQjAr6KZgeTNdDRkowDWtvnZKcqFJXI/PPrQWxKp
        iYLytdX+vAp8Cex58h0/4MBS8A3Au1IXI7IQCtq7mo0Dt4A/n2vvthA2ASwH+73UtYgslFyv5vOV++OP
        1IwCQCRjCgD5RXoLmA2tC7A4WsDjwCgVemzYPQX+ssHGO3AOTV2PLD4FwOIYB66KkTvNqvPK0N05dGVv
        +PX3rxgmuho7M6AAWBzRzEZD8Neq9NbE77oDBvsDO8cn9RiQB7UByBuaDq/PqA0gIwoAkYwpAEQypgAQ
        yZgCQCRjCgCRjCkARDKmABDJmAJAJGMKAJGMKQBEMqYAEMmYAkAkYwoAkYwpAEQypgBYPNUbVDtUwGkr
        IGhx0FxoQpDF0e/unwZOD6FCi4P+yj30FmY/HDn2vet/eaiKESYdUgAsjn7g0tRFdMqsXA/0sWcmWX/K
        Mi0OmoHKXJ3kAKrMNKbyVikARDKmABDJWEHZ1LO/m74GcJA742bVadRaSO44+AozelLXIrJQCmASGNjP
        5w4GvmfGGPk+ITpYARyTuhCRhVIALwBr2/jcutTFisjCCsDW1EWISBrBjB9QLmUlUtLr/2wU7vwQuB/4
        tdTF1MgUcDOwjQq1mbhDMGzt4X3n4X5K6npk8RUQX4JwPXAy8EupC6qJMeAG4P5KrQ14z3/CIYOBZ0eH
        iAqAHAQImHEb8BfAROqCauIlYHvqIjo2GeGFSXCvzF2LvDUhxo2428zsXcAwsDN1URXnwL+G0NhuVsHz
        yNUAkJMAEOMG3OOYOyPA5ZRtAtOpi6ugCPwA+EaMrVartSF1PSL7tGc0oPtGQhieAv9nsLuB84HzgHcD
        K9HIwX2JwE+BW4C/jtGe7+1tMa0IlS73cyf1bIOV9/YOb+/t5W8mJvh7d1a42yozX2LmVqFG7QOg7EUd
        o00CL5mxA2jCBp38Ugl7vapPT2/cfQBPzP68qEfD/dM2kqrJcmCPiJQUACIZUwCIZEwBIJIxBYBIxhQA
        IhlTAIhkTAEgkjF175U3rCjgmBXw4A4nqlcT4PSEWm8L9evNSFFcQ0/PJNPTS1a68x7gKDP6d/+9O140
        LPzRxw65+KjV/Wd6xl0bzWC66WP/dMcr37j30bFnGg17891ydOcVMx4Cf8qdmRivSl3y/H7P1AXIgWG2
        CfemhdDzAeBq4H3AIHt5DDTDNOijFB1n75OkTQMvAt9x5+tmvFKlyV92007OwmZCaAGcDnwHOD51RTUy
        Qzn709XAVNVCQI2AGZg9+QeAP0Yn/0LrAS4BzkpdyHwoAPJxJHBm6iJqahVw9sDAJGYjqWvpiAIgH4cC
        S1MXUWNvm5zs7w2hWg2nCoBMmFGg/b2Yesw8VG1RBR0Q2ajWgVlN1dvGCgCRjCkARDKmrsAy1/PAbZTL
        m+XOgeOAs4FG6mIWgwJA5nocfEOMY6/BQNYdxYqiP8bY+k3ws1AASD4shjDkMW6sXqvWAopxGLBabwO1
        AYhkTAEgkjEFgEjGFAAiGVMAiGRMASCSMQWASMYUACIZUwCIZEwBIJIxBYBIxjQWQPbCQ4xjBl/NejBQ
        CEWMsVXrbaAAkLmOBRsJYSj74cAxNncPB+5JXctiUQDIXEcAl6UuQg4MtQGIZEwBIJIxBUA2at2W1SWq
        t43VBpAJd5pATF1Hjc24h8ptX90B5OOnwFjqImrshd7eYjrGamWAAiAfzwF3pS6ipl4Gv31qagb3q1LX
        0hEFQAZiLAAmwG4AHk1dT81MA9+G8F9VbAOo5VTHMte/A+fhPrjdbPoh4DDgYMr9b5Tz3+un/Z9IuW7C
        s8AN7nadGWMxbki9oztWvciSeSuKa1mz5jCeemr7CuBk4GgzBtBx0KmWOzvAHzYLT7t7M8aNqWsSERER
        ERERERERERERERERERERERERERERERGRWtIw0Nr7c2DGimJJaDRc+3uRtFrmzWajVf7flanLaZsOiJoJ
        YQSgF/xw4CTgWMoJQAbRBDCLqQWMA9uBnwCPAC8C0908V4ACoBa+SqPRg3sccrezzPg4cBblib8E7ecD
        yXkjCO4Ebnb3u6Ex7v6V2b/qHjowKs5sBKBh5mcAnwfOBZalrkv2eA24DbjePTxg5rGbpg7TLWGFhTCM
        GYNmfBb4GvA+oC91XfJz+ikfxc4180kze9TsnBn3LanrAhQAlVU+64fl4H8KbAQOSl2T7NMK4INAD4QH
        zM6Z7oYQUABUUAjDgA2AX0152z+QuiZpSy9wGnjLzO4zO7eVOgQUABVjNoJ7YWbxEuBLlI18Uh09wCnA
        czGOPwwfAdKFgBYGqRgzJ4TmeyhfNi9NXY/My3JgQwhL14WQth1eAVAh5a2/9wFXAEenrkfekhPBLwfv
        KfdrGloduHreC1wwj+9FtDrwYgp0fkH9GHATsDVV0QqAijDbRIwzFkLPBcChbX6tRbkW4BbgaXemUv8e
        dWVGH3AMcA5wPO2FwduB84sibJ2Z2ZRkYVEFQEWYGWY9q4D1bX5lCvgWcF2j4dtiJMZYrZVrq8RsGDMa
        MfpRZnYl8BnKVv/9WT8zE78OtjNF3QqAajmS9p79Hfieu30RfHRmRif+Ypvt798yG37CnSvNWAL8Vhtf
        PcGM1cBO9wNftxoBq+VoYKiNzz0LdoOZj7p370CUOnLfiBmvAn9JORhof5YBa1LVqwColkNor6vvfwNP
        pC42Z2b8GHiwjY/20X6bzoJTAFTLEtrbZ8+vXr1qwlPcUwrlGLvGLuC5Nj5ckLAzlwKgWtrtuTn90kuj
        uOutXwoxGq1WXwSm2/i4kbBHrgJAJGMKAJGMKQBEMqYAEMmYAkAkYwoAkYwpAEQypgAQyZgCoLbUCzCt
        asy4r9GA1dLuWd3fbLaWh1AEGEldc4Yc9wmj/Snak6W1AqCLFcUwg4MwOsoQcAJwWptf/biZn5K6/pyZ
        ObQ3dNso13O412zkx/3928YnJtYCXzgwdSbbQrJPs/PELQU+DPwOcAawEs3kXEct4GXgbuAmd98CtutA
        DOVWAHSZEDZhthT38RMoF/y4CM3+m5NR4PvA5hCGnohxlMWcyUlXky4Swib6+4+h2fzZmcA3KSeNb2da
        KamPPsqJX091n34Ewgtm57BYC4joDqBLhHANZZNMPAO4EViXuiZJbitwmbtvbTQaNJtXLvg/oNeAXcOA
        1juBYXTyS+kUYBOEw2NcnBcFegToArNr/fWAfRH4FLozkzesMWNXCH6X2bm+0I8CugPoHqdSziKrk1/e
        LACfidHevRgzvCkAEptd7qsBXAysTl2PdKV3ABfFOGhmC9uxSx2BusOhlCvKtKsJjKOlvqqsQTkZaLvn
        4Lkh7LoefMdC3gkoALrD8ZSLfrTjccoVf7aaMa0+/1VkuNNH2bPzMtpbF2AtxLVgOxayEgVAV7BjaK+z
        zwvAH/T1NbZMTrZ2r0YjFdRobKLVWrUlhFd/BHybcs2HfVk6e5zct5B1qA0gqZuYvYIfTHtvZP7N3e6c
        mmqhFX+qrdW6ihBewd1vB25v4yt9lMfJglIAJLUdMwPob/ML28ziTIzvSl24LIAYWzQaxSSwrc2vtHuc
        tE0BkFRg9g6g3Vd/sfzoBakLlwXRxN2g/cbcBX9FrAAQyZgCQCRjCgCRjCkARDKmABDJmAJAJGMKAJGM
        KQBEMqYAEMmYAkAkYwqA7qAxvVna0wNYKwNVTQjXAph7HDJjiPaXgXoTJ0aLZqxs8wurgCNDGNZ+q4kY
        m9GMVW1+/K3u/ylgtNFojLm7N5tXav65+QhhBHcbMosXA58AjmVeAbDHMtqbD+D12R+plwO1/yeBx4B/
        BP4FGFcAdGh2Bt8h8K8AnwUGUtck0qFx4HrgGk0L3gGzYUIwwH8b+DN08ks19QInAy+qEbAD5dwdvgz4
        JDr5pdqWAZcoADrk7suB41LXIbIATlIAzI9e20kduAKgA+7gbq9RtqSKVN1DCoAOmLUIIbwO/ANlS6pI
        Vb0GfEtvATrg/h+YnQ3wJNBDuXprb+q6RDo0Clxnxo3qBzAPZV8AlgAXUnYEOg69FZDutwt4FPi+md0G
        TCgA5qkoriWEQLPZXAIMoaXWpfs1zWxsYCDump42pqe1uIyIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
        iIiIiIhIN/p/rv8za9l5McgAAAAASUVORK5CYII=
</value>
  </data>
</root>